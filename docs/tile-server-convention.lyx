#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}
\usepackage{alltt}

\usepackage[style=authoryear, natbib=true]{biblatex}
%\bibliography{/home/stephan/Dropbox/PhD/References/lib.bib}

\DeclareNameFormat{sortname}{% Bibliographie
  \iffirstinits
    {\usebibmacro{name:last-first}{#1}{#4}{#5}{#7}}
    {\usebibmacro{name:last-first}{#1}{#4}{#5}{#7}}
  \usebibmacro{name:andothers}} 

\newcommand{\hlstd}[1]{\textcolor[rgb]{0,0,0}{#1}}
\newcommand{\hlnum}[1]{\textcolor[rgb]{0.66,0,0.66}{#1}}
\newcommand{\hlesc}[1]{\textcolor[rgb]{1,0,0.8}{#1}}
\newcommand{\hlstr}[1]{\textcolor[rgb]{1,0,0}{#1}}
\newcommand{\hldstr}[1]{\textcolor[rgb]{1,0,0}{#1}}
\newcommand{\hlslc}[1]{\textcolor[rgb]{0.4,0.4,0.4}{\it{#1}}}
\newcommand{\hlcom}[1]{\textcolor[rgb]{0.4,0.4,0.4}{\it{#1}}}
\newcommand{\hldir}[1]{\textcolor[rgb]{0,0.72,0}{#1}}
\newcommand{\hlsym}[1]{\textcolor[rgb]{1,0,0}{#1}}
\newcommand{\hlline}[1]{\textcolor[rgb]{0.4,0.4,0.4}{#1}}
\newcommand{\hlkwa}[1]{\textcolor[rgb]{0,0,1}{\bf{#1}}}
\newcommand{\hlkwb}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlkwc}[1]{\textcolor[rgb]{0.93,0.5,0.08}{#1}}
\newcommand{\hlkwd}[1]{\textcolor[rgb]{0,0,0}{\bf{#1}}}
\definecolor{bgcolor}{rgb}{1,1,1}

\newcommand{\xmlhlstd}[1]{\textcolor[rgb]{0.41,0.41,0.41}{#1}}
\newcommand{\xmlhlnum}[1]{\textcolor[rgb]{0.73,0,1}{#1}}
\newcommand{\xmlhlesc}[1]{\textcolor[rgb]{0.32,0,0.53}{#1}}
\newcommand{\xmlhlstr}[1]{\textcolor[rgb]{0,0.53,0}{#1}}
\newcommand{\xmlhldstr}[1]{\textcolor[rgb]{0,0.53,0}{#1}}
\newcommand{\xmlhlslc}[1]{\textcolor[rgb]{0.07,0.15,0.64}{\it{#1}}}
\newcommand{\xmlhlcom}[1]{\textcolor[rgb]{0.07,0.15,0.64}{\it{#1}}}
\newcommand{\xmlhldir}[1]{\textcolor[rgb]{0.28,0,0}{#1}}
\newcommand{\xmlhlsym}[1]{\textcolor[rgb]{0.41,0.41,0.41}{#1}}
\newcommand{\xmlhlline}[1]{\textcolor[rgb]{0.33,0.33,0.33}{#1}}
\newcommand{\xmlhlkwa}[1]{\textcolor[rgb]{0.41,0.41,0.41}{\bf{#1}}}
\newcommand{\xmlhlkwb}[1]{\textcolor[rgb]{0.41,0.41,0.41}{#1}}
\newcommand{\xmlhlkwc}[1]{\textcolor[rgb]{0.41,0.41,0.41}{\bf{#1}}}
\newcommand{\xmlhlkwd}[1]{\textcolor[rgb]{0,0,0}{#1}}


\usepackage{caption}
\captionsetup[figure]{labelfont=bf,labelsep=period}
\end_preamble
\use_default_options true
\begin_modules
biblatex
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 15 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Convention for TileServer
\end_layout

\begin_layout Standard
This document describes the ongoing, proof-of-concept to use arbitary TileServer
s other than the pre-specified tile server in CATMAID.
 A proof-of-concept implementation using Ilastik (with Volumina & LazyFlow)
 is in development here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/ilastik/volumina/tree/stackeditor
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Authors: Bernhard Klausler, Stephan Gerhard
\end_layout

\begin_layout Section
Setup
\end_layout

\begin_layout Itemize
Run the TileServer, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

./stackEditorServer.py
\end_layout

\end_inset

 in the volumina repository
\end_layout

\begin_layout Itemize
Configure a CATMAID stack and set 
\end_layout

\begin_deeper
\begin_layout Itemize
the image_base to the URL on which the TileServer serves, e.g.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://localhost:8888/
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
the tile_source_type to 2
\end_layout

\end_deeper
\begin_layout Section
Coordinate systems
\end_layout

\begin_layout Standard
Synchronizing the conventions used across the system in terms of coordinate
 systems and mappings between them is very important.
 We have:
\end_layout

\begin_layout Itemize
Volumina convention, information here: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/Ilastik/volumina/wiki/Coordinate-systems
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
HDF5/NumPy convention as used by volumina
\end_layout

\begin_layout Itemize
CATMAID tiles row_column_scale
\end_layout

\begin_layout Itemize
Screen coordinates
\end_layout

\begin_layout Section
Retrieving Stack Metadata
\end_layout

\begin_layout Standard
Default URL: /metadata
\end_layout

\begin_layout Itemize
GET request
\end_layout

\begin_layout Itemize
Retrieve stack-associated information as JSON
\end_layout

\begin_layout Itemize
To be implemented as a Django-view that depending on the tile_source_type,
 fetches from the CATMAID database stack metadata, or from the TileServer
\end_layout

\begin_layout Itemize
JSON convention
\end_layout

\begin_layout Description
title the stack title
\end_layout

\begin_layout Description
comment general comments about the stack, like provenance
\end_layout

\begin_layout Description
dimension (x,y,z)
\end_layout

\begin_layout Description
resolution (x,y,z)
\end_layout

\begin_layout Description
tilesource_url default: /
\end_layout

\begin_layout Description
labelupload_url default: /labelupload
\end_layout

\begin_layout Description
file_extension default: png
\end_layout

\begin_layout Description
tile_width default: 256
\end_layout

\begin_layout Description
tile_height default: 256
\end_layout

\begin_layout Description
min_zoom_level default: -1 (do we need this?)
\end_layout

\begin_layout Section
Retrieving Tiles
\end_layout

\begin_layout Standard
Default URL: /
\end_layout

\begin_layout Itemize
GET request
\end_layout

\begin_layout Itemize
JSON convention:
\end_layout

\begin_layout Description
x x location in what volumina calls physical coordinates, i.e.
 the second axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
y y location in what volumina calls physical coordinates, i.e.
 the third axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
z z location in what volumina calls physical coordinates, i.e.
 the forth axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
dx the tile width, should match the metadata tile_width
\end_layout

\begin_layout Description
dy the tile height, should match the metadata tile_height
\end_layout

\begin_layout Description
scale a float scale factor, defined as 1/2**zoomlevel
\end_layout

\begin_layout Section
Uploading Labels
\end_layout

\begin_layout Standard
Default URL: /labelupload
\end_layout

\begin_layout Standard
The labeled pixels (RGBA) within a field-of-view need to be uploaded to
 the TileServer and integrated in the appropriate data store (e.g.
 HDF5 dataset for labels) or used for prediction.
 The definition of the field-of-view is similar to the definition of the
 tiles.
 It basically defines a shape and position that can be used to index into
 HDF5 datasets.
\end_layout

\begin_layout Itemize
POST request
\end_layout

\begin_layout Itemize
JSON convention:
\end_layout

\begin_layout Description
x x location in what volumina calls physical coordinates, i.e.
 the second axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
y y location in what volumina calls physical coordinates, i.e.
 the third axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
z z location in what volumina calls physical coordinates, i.e.
 the forth axis axis of a (t,x,y,z,c) dataset
\end_layout

\begin_layout Description
row e.g.
 set to 'y' to mean that the row axis (from top-left to bottom-left) uses
 the third axis of the dataset
\end_layout

\begin_layout Description
column e.g.
 set to 'x' to mean that the column axis (from top-left to top-right) uses
 the forth axis of the dataset
\end_layout

\begin_layout Description
image the pixel data encoded as RGBA-based PNG
\end_layout

\end_body
\end_document
